=========================================
This is a test file for 0-add_integer.py
=========================================

# run test with
================ 
>>> python3 -m doctest -v ./tests/0-add_integer.txt

First import method to test
===========================
>>> add_integer = __import__('0-add_integer').add_integer

check docstring
===============
>>> doc = __import__("0-add_integer").__doc__
>>> len(doc) > 1
True

SUCCESS CASES:
================

Test signed and unsigned ints and floats:
     >>> add_integer(1, 2)
     3
     
     >>> add_integer(-1, 2)
     1

Test floats are casted to ints:
     >>> add_integer(1.0, 2.0)
     3
     
     >>> add_integer(-2.0, 1)
     -1

Test use of default b=98 value:
     >>> add_integer(2)
     100

FAIL CASES:
================

Test other data types:
     >>> add_integer("hello", "world")
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     
     >>> add_integer(0, [1, 2, 3])
     Traceback (most recent call last):
     ...
     TypeError: b must be an integer

Test no args:
     >>> add_integer(None)
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer

     >>> add_integer(None, None)
     Traceback (most recent call last):
     ...
     TypeError: a must be an integer
     
     >>> add_integer()

Test extra args:
     >>> add_integer(1, 2, 3)
     Traceback (most recent call last):
     ...
     TypeError: add_integer() takes from 1 to 2 positional arguments but 3 were given


Test infinity ("inf" is infinity):
     >>> add_integer(float("inf"))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer
     
     >>> add_integer(float("-inf"))
     Traceback (most recent call last):
     ...
     OverflowError: cannot convert float infinity to integer

Test NaN in Python (not a number):
     >>> add_integer(float("NaN"))
     Traceback (most recent call last):
     ...
     ValueError: cannot convert float NaN to integer
     